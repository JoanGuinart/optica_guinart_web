<section id="promosEspecials">
  <div class="columnat nou-columnat">
    <div class="promo">
      <div class="front">
        <p>Promoció</p>
        <p>Montures de marca</p>
      </div>
      <div class="back">
        <p>15%</p>
        <span>descompte</span>
        <p>Montures de marca</p>
      </div>
    </div>
    <div class="promo">
      <div class="front">
        <p>Promoció</p>
        <p>Audiòfons</p>
      </div>
      <div class="back">
        <p>40%</p>
        <span>descompte</span>

        <p>Audiófons recargables</p>
      </div>
    </div>
    <div class="promo">
      <div class="front">
        <p>Promoció</p>
        <p>Ray-Ban</p>
      </div>
      <div class="back">
        <p>40%</p>
        <span>descompte</span>
        <p>Ray-Ban graduada progressiva</p>
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  @use "../styles/variables.scss";

  #promosEspecials {
    background-color: variables.$gris;
    padding-block: 40px;
    display: flex;
    justify-content: center;
    overflow-x: hidden;
    .nou-columnat {
      width: 100%;
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      justify-content: space-between;

      .promo {
        flex: 1 1 calc(33.333% - 20px);
        max-width: calc(33.333% - 20px);
        height: 400px;
        perspective: 1000px;
/* 
        &:hover .front {
          transform: rotateX(180deg);
        }
        &:hover .back {
          transform: rotateX(0deg);
        } */

        &.rotated .front {
          transform: rotateX(180deg);
        }
        &.rotated .back {
          transform: rotateX(0deg);
        }

        .front,
        .back {
          position: absolute;
          width: 100%;
          height: 100%;
          backface-visibility: hidden;
          border-radius: 10px;
          display: flex;
          justify-content: center;
          align-items: center;
          font-size: 1.2rem;
          font-weight: bold;
          transition: transform 0.6s cubic-bezier(0.4, 0.2, 0.2, 1);
        }

        .front {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          gap: 30px;
          color: variables.$carbo-fosc;
          background-color: variables.$beix;
          transform: rotateX(0deg);
          font-family: "montserrat", sans-serif;
          text-transform: uppercase;
          height: 100%;
          min-width: 280px;
          text-align: center;
          p:first-child {
            font-size: clamp(40px, 3vw, 60px);
          }
          p:nth-child(2) {
            font-size: clamp(20px, 2vw, 35px);
          }
        }

        .back {
          color: variables.$blanc;
          background-color: variables.$daurat-fosc;
          transform: rotateX(-180deg);
          font-family: "Montserrat", sans-serif;
          font-size: 30px;
          text-align: center;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          gap: 30px;
          p:first-child {
            font-size: clamp(50px, 5vw, 100px);
          }
          span {
            font-size: 10px;
            margin-top: -30px;
            font-style: italic;
            text-transform: uppercase;
            letter-spacing: 2px;
          }
          p:nth-child(3) {
            font-size: clamp(30px, 2vw, 40px);
          }
        }
      }

      @media (max-width: variables.$tall3) {
        .promo {
          flex: 1 1 calc(50% - 20px);
          max-width: calc(50% - 20px);
        }

        .promo:nth-last-child(1):nth-child(odd) {
          flex: 1 1 100%;
          max-width: 100%;
        }
      }

      @media (max-width: variables.$tall2) {
        .promo {
          flex: 1 1 100%;
          max-width: 100%;
        }
      }
    }
  }
</style>

<script>
  function createObserver() {
    const promos = document.querySelectorAll(".promo");

    // Configuración del IntersectionObserver
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("rotated"); 
          } else {
            entry.target.classList.remove("rotated"); 
          }
        });
      },
      {
        threshold: 1.0, 
        rootMargin: "0px 0px -150px 0px"
      }
    );

    // Observar todas las tarjetas
    promos.forEach((promo) => {
      observer.observe(promo);
    });
  }

  // Llamar a la función para crear el observer
  document.addEventListener("DOMContentLoaded", createObserver);
</script>
